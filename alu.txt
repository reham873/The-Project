`timescale 1ns / 1ps


module alu (
    input wire [15:0] op1,
    input wire [15:0] op2, 
    input wire [2:0] opcode,     
    output reg [15:0] result     
);

  always @(*) begin
        case (opcode)
            3'b000: result = op1 & op2; 
            3'b001: result = op1 + op2; 
            3'b010: result = op1; 
            3'b011: result = ~op1; 
            3'b100: result = op1 >> 1; 
            3'b101: result = op1 << 1; 
            3'b110: result = 8'b0; 
            default: result = 8'b0; 
        endcase
    end

endmodule


module alu_tb;
 
    reg op1;
    reg op2;
    reg opcode;
    wire result;

    alu dut (      
        .op1(op1),
        .op2(op2),
        .opcode(opcode),
        .result(result)
    );

endmodule

